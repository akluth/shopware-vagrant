server {
    listen 80;
    # listen 443 ssl http2;

    server_name {{shopware_app_host_name}};
    root {{nginx_web_root}}{{shopware_app_host_name}};

    ## Access and error logs.
    access_log {{nginx_log_root}}{{shopware_app_host_name}}.access.log;
    error_log  {{nginx_log_root}}{{shopware_app_host_name}}.error.log;

    set $shopware_env 'dev';
    set $fpm_upstream unix:/run/php/php{{php_version}}-fpm.sock;

    if ($request_method = BAN) {
        rewrite ^ /shopware.php last;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location ~ /\. {
        return 404;
    }

    location ~ \.(tpl|yml|ini|log)$ {
        return 404;
    }

    location ^~ /media/temp/ {
        return 404;
    }

    location ^~ /var/ {
        return 404;
    }

    location ~ (autoload\.php|composer\.(json|lock|phar)|CONTRIBUTING\.md|eula.*\.txt|license\.txt|README\.md|UPGRADE-(.*)\.md|.*\.dist)$ {
        return 404;
    }

    location ~ /(web\/cache\/(config_\d+\.json|all.less))$ {
        return 404;
    }

    location ~ /themes/(.*)(.*\.lock|package\.json|Gruntfile\.js|all\.less)$ {
        return 404;
    }

    location ^~ /files/documents/ {
        return 404;
    }

    location ^~ /files/backup/ {
        return 404;
    }

    location ~ /custom/.*(config|menu|services|plugin)\.xml$ {
        # rewrite, because this is the default behaviour for non-existing files and
        # makes it difficult to detect whether a plugin is installed or not by checking the files
        rewrite . /shopware.php?controller=Error&action=pageNotFoundError last;
    }

    location /recovery/install {
        index index.php;
        try_files $uri /recovery/install/index.php$is_args$args;
    }

    location /recovery/update/ {
        location /recovery/update/assets {
        }
        if (!-e $request_filename){
            rewrite . /recovery/update/index.php last;
        }
    }

    location / {
        location ~* "^/themes/Frontend/(?:.+)/frontend/_public/(?:.+)\.(?:ttf|eot|svg|woff|woff2)$" {
            expires max;
            add_header Cache-Control "public";
            access_log off;
            log_not_found off;
        }

        location ~* "^/web/cache/(?:[0-9]{10})_(?:.+)\.(?:js|css)$" {
            expires max;
            add_header Cache-Control "public";
            access_log off;
            log_not_found off;
        }


        location ~* ^.+\.(?:css|cur|js|jpe?g|gif|ico|png|svg|webp|html)$ {
            rewrite files/documents/.* /engine last;
            rewrite backend/media/(.*) /media/$1 last;

            expires 1w;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";

            access_log off;
            log_not_found off;

            tcp_nodelay off;
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;

            try_files $uri /shopware.php?controller=Media&action=fallback;
        }

        index shopware.php index.php;
        try_files $uri $uri/ /shopware.php$is_args$args;
    }

    location = /sitemap.xml {
        log_not_found off;
        access_log off;
        try_files $uri @shopware;
    }

    location = /sitemapMobile.xml {
        log_not_found off;
        access_log off;
        try_files $uri @shopware;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
        try_files $uri @shopware;
    }

    location @shopware {
        rewrite / /shopware.php;
    }

    location ~ \.php$ {
        try_files $uri $uri/ =404;

        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        include fastcgi.conf;

        fastcgi_param SHOPWARE_ENV    $shopware_env if_not_empty;

        fastcgi_param HTTP_PROXY "";

        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;

        client_max_body_size 24M;
        client_body_buffer_size 128k;

        fastcgi_pass $fpm_upstream;

        # http2_push_preload on;
    }
}
